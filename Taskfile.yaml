---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  BOOTSTRAP_DIR: "{{.ROOT_DIR}}/bootstrap"
  ANSIBLE_DIR: "{{.ROOT_DIR}}/ansible"
  KUBERNETES_DIR: "{{.ROOT_DIR}}/kubernetes"

env:
  KUBECONFIG: "{{.ROOT_DIR}}/kubeconfig"

includes:
  ansible: .taskfiles/Ansible/Taskfile.yaml
  kubernetes:
    aliases: ["k8s"]
    taskfile: .taskfiles/Kubernetes/Taskfile.yaml
  flux: .taskfiles/Flux/Taskfile.yaml
  k0s: .taskfiles/K0s/Taskfile.yaml
  repo: .taskfiles/Repo/Taskfile.yaml
  sops: .taskfiles/Sops/Taskfile.yaml
  workstation: .taskfiles/Workstation/Taskfile.yaml

tasks:

  default: task -l

  init:
    desc: Initialize configuration files
    cmds:
      - cp -n {{.BOOTSTRAP_DIR}}/vars/addons.sample.yaml {{.BOOTSTRAP_DIR}}/vars/addons.yaml
      - cp -n {{.BOOTSTRAP_DIR}}/vars/config.sample.yaml {{.BOOTSTRAP_DIR}}/vars/config.yaml
      - cmd: echo "=== Configuration files copied ==="
        silent: true
      - cmd: echo "Proceed with updating the configuration files..."
        silent: true
      - cmd: echo "{{.BOOTSTRAP_DIR}}/vars/config.yaml"
        silent: true
      - cmd: echo "{{.BOOTSTRAP_DIR}}/vars/addons.yaml"
        silent: true
    status:
      - test -f "{{.BOOTSTRAP_DIR}}/vars/addons.yaml"
      - test -f "{{.BOOTSTRAP_DIR}}/vars/config.yaml"

  # TODO: Only prompt when generated directories exist
  # https://github.com/go-task/task/issues/1330
  configure:
    desc: Configure repository from Ansible vars
    prompt: Any conflicting config in the root kubernetes and ansible directories will be overwritten... continue?
    cmds:
      - task: .validate
      - task: .template
      - task: sops:encrypt:all

  .validate:
    internal: true
    cmd: ./.venv/bin/ansible-playbook {{.BOOTSTRAP_DIR}}/validate.yaml
    env:
      ANSIBLE_DISPLAY_SKIPPED_HOSTS: "false"

  # NOTE: single quotes are required for the data-var values
  # to escape any weird characters bash might interpret
  .template:
    internal: true
    cmds:
      - ./.venv/bin/makejinja
          --input "{{.BOOTSTRAP_DIR}}/templates"
          --output "{{.ROOT_DIR}}"
          --data "{{.BOOTSTRAP_DIR}}/vars/config.yaml"
          --data "{{.BOOTSTRAP_DIR}}/vars/addons.yaml"
          --data-var 'bootstrap_coredns_addr={{.bootstrap_coredns_addr}}'
          --data-var 'bootstrap_wego_password={{.bootstrap_wego_password}}'
          --jinja-suffix ".j2" --quiet --force
      - find {{.ANSIBLE_DIR}} {{.KUBERNETES_DIR}} -type d -empty -delete
    vars:
      discover_coredns_addr:
        sh: yq '.bootstrap_service_cidr' {{.BOOTSTRAP_DIR}}/vars/config.yaml | awk -F',' '{print $1}'
        fail_msg: Unable to parse addons to discover coredns cluster IP
      discover_wego_password:
        sh: yq '.weave_gitops.password' {{.BOOTSTRAP_DIR}}/vars/addons.yaml
        fail_msg: Unable to parse addons to discover weave-gitops password
      bootstrap_coredns_addr:
        sh: ./.venv/bin/python3 -c 'import ipaddress; print(ipaddress.IPv4Network("{{.discover_coredns_addr}}")[10])'
        fail_msg: Unable to generate coredns cluster IP
      bootstrap_wego_password:
        sh: ./.venv/bin/python3 -c 'import bcrypt; print(bcrypt.hashpw(b"{{.bootstrap_wego_password}}", bcrypt.gensalt(rounds=10)).decode("ascii"))'
        fail_msg: Unable to generate weave-gitops password
    preconditions:
      - { msg: "config file not found", sh: "test -f {{.BOOTSTRAP_DIR}}/vars/config.yaml" }
      - { msg: "addons file not found", sh: "test -f {{.BOOTSTRAP_DIR}}/vars/addons.yaml" }

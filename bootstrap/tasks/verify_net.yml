---
- name: Verify node CIDR
  ansible.builtin.assert:
    that: ["{{ bootstrap_node_cidr is ansible.utils.ipv4 }}"]
    success_msg: "Node CIDR {{ bootstrap_node_cidr }} is valid."
    fail_msg: "Node CIDR {{ bootstrap_node_cidr }} is invalid."
- name: Verify cluster CIDR
  ansible.builtin.assert:
    that: ["{{ bootstrap_cluster_cidr is ansible.utils.ipv4 }}"]
    success_msg: "Cluster CIDR {{ bootstrap_cluster_cidr }} is valid."
    fail_msg: "Cluster CIDR {{ bootstrap_cluster_cidr }} is invalid."
- name: Verify service CIDR
  ansible.builtin.assert:
    that: ["{{ bootstrap_service_cidr is ansible.utils.ipv4 }}"]
    success_msg: "Service CIDR {{ bootstrap_service_cidr }} is valid."
    fail_msg: "Service CIDR {{ bootstrap_service_cidr }} is invalid."

- name: Verify k8s_gateway
  ansible.builtin.assert:
    that: ["{{ bootstrap_k8s_gateway_addr is ansible.utils.ipv4 }}"]
    success_msg: "k8s_gateway address {{ bootstrap_k8s_gateway_addr }} is valid."
    fail_msg: "k8s_gateway address {{ bootstrap_k8s_gateway_addr }} is invalid."
- name: Verify k8s_gateway in node CIDR
  ansible.builtin.assert:
    that: ["{{ bootstrap_node_cidr | ansible.utils.network_in_usable(bootstrap_k8s_gateway_addr) }}"]
    success_msg: "k8s_gateway address {{ bootstrap_k8s_gateway_addr }} is within {{ bootstrap_node_cidr }}."
    fail_msg: "k8s_gateway address {{ bootstrap_k8s_gateway_addr }} is not within {{ bootstrap_node_cidr }}."

- name: Verify ingress-nginx
  ansible.builtin.assert:
    that: ["{{ bootstrap_ingress_nginx_addr is ansible.utils.ipv4 }}"]
    success_msg: "ingress-nginx address {{ bootstrap_ingress_nginx_addr }} is valid."
    fail_msg: "ingress-nginx address {{ bootstrap_ingress_nginx_addr }} is invalid."
- name: Verify ingress-nginx in node CIDR
  ansible.builtin.assert:
    that: ["{{ bootstrap_node_cidr | ansible.utils.network_in_usable(bootstrap_ingress_nginx_addr) }}"]
    success_msg: "ingress-nginx address {{ bootstrap_ingress_nginx_addr }} is within {{ bootstrap_node_cidr }}."
    fail_msg: "ingress-nginx address {{ bootstrap_ingress_nginx_addr }} is not within {{ bootstrap_node_cidr }}."

- name: Verify Kube Vip
  ansible.builtin.assert:
    that: ["{{ bootstrap_kube_vip_addr is ansible.utils.ipv4 }}"]
    success_msg: "Kube Vip address {{ bootstrap_kube_vip_addr }} is valid."
    fail_msg: "Kube Vip address {{ bootstrap_kube_vip_addr }} is invalid."
- name: Verify Kube Vip in node CIDR
  ansible.builtin.assert:
    that: ["{{ bootstrap_node_cidr | ansible.utils.network_in_usable(bootstrap_kube_vip_addr) }}"]
    success_msg: "Kube Vip address {{ bootstrap_kube_vip_addr }} is within {{ bootstrap_node_cidr }}."
    fail_msg: "Kube Vip address {{ bootstrap_kube_vip_addr }} is not within {{ bootstrap_node_cidr }}."

- name: Verify master node count
  ansible.builtin.assert:
    that:
      - "{{ bootstrap_hosts.master | length > 0 }}"
      - "{{ bootstrap_hosts.master | length is odd }}"
    success_msg: "Master node count {{ bootstrap_hosts.master | length }} is correct."
    fail_msg: "Master node count {{ bootstrap_hosts.master | length }} is not greater than 0 or is not odd."

- name: Verify SSH port is reachable
  ansible.builtin.wait_for:
    host: "{{ ssh_host.ip }}"
    port: 22
    search_regex: OpenSSH
  connection: local
  loop: "{{ bootstrap_hosts.master + bootstrap_hosts.worker | default([]) }}"
  loop_control:
     loop_var: ssh_host
  no_log: true

---
# https://github.com/kevincoakley/ansible-role-k8s-rolling-update
- name: Cluster rollout update
  hosts: all
  become: true
  gather_facts: true
  any_errors_fatal: true
  serial: 1
  pre_tasks:
    - name: Pausing for 5 seconds...
      ansible.builtin.pause:
        seconds: 5
  tasks:
    - name: Get the node's details
      ansible.builtin.command: "kubectl get node {% raw %}{{ inventory_hostname }}{% endraw %} -o json"
      register: kubectl_get_node
      delegate_to: "{% raw %}{{ groups['master'][0] }}{% endraw %}"
      failed_when: false
      changed_when: false

    - name: Update node
      when:
        # When status.conditions[x].type == Ready then check stats.conditions[x].status for True|False
        - kubectl_get_node['stdout'] | from_json | json_query("status.conditions[?type == 'Ready'].status")
        # If spec.unschedulable is defined then the node is cordoned
        - not (kubectl_get_node['stdout'] | from_json).spec.unschedulable is defined
      block:
        - name: "Cordon {% raw %}{{ inventory_hostname }}{% endraw %}"
          kubernetes.core.k8s_drain:
            state: cordon
            name: "{% raw %}{{ inventory_hostname }}{% endraw %}"
          delegate_to: "{% raw %}{{ groups['master'][0] }}{% endraw %}"

        - name: "Drain {% raw %}{{ inventory_hostname }}{% endraw %}"
          kubernetes.core.k8s_drain:
            state: drain
            name: "{% raw %}{{ inventory_hostname }}{% endraw %}"
            delete_options:
              delete_emptydir_data: true
              ignore_daemonsets: true
              terminate_grace_period: 60
              wait_timeout: 120
          # Supported feature in upcoming kubernetes.core 2.5.0
          #  pod_selectors:
          #    - app!=rook-ceph-osd
          delegate_to: "{% raw %}{{ groups['master'][0] }}{% endraw %}"

        - name: Update all packages
          ansible.builtin.apt:
            upgrade: dist
            update_cache: true

        - name: Check if a Reboot is Required
          ansible.builtin.stat:
            path: /var/run/reboot-required
          register: reboot_required

        - name: Reboot
          ansible.builtin.reboot:
            msg: Rebooting node
            post_reboot_delay: 60
            reboot_timeout: 3600
          when: reboot_required.stat.exists

        - name: "Uncordon {% raw %}{{ inventory_hostname }}{% endraw %}"
          kubernetes.core.k8s_drain:
            state: uncordon
            name: "{% raw %}{{ inventory_hostname }}{% endraw %}"
          delegate_to: localhost
